{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","onChange","filter","value","PersonForm","onSubmit","onNameChange","onNumberChange","newName","number","type","Persons","filteredName","onDelete","map","person","name","onClick","id","baseURL","axios","get","then","response","data","post","delete","put","Notification","message","className","App","useState","persons","setPersons","setNewName","setNumber","setFilter","notification","setNotification","msgType","setMsgType","useEffect","personService","toLowerCase","includes","e","target","preventDefault","window","alert","existingPerson","find","confirm","updatedPerson","r","p","setTimeout","leftPerson","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.312404e3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ onChange, filter }) => {\n  return (\n    <div>\n      filter with Name: <input onChange={onChange} value={filter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react'\n\nconst PersonForm = ({onSubmit, onNameChange, onNumberChange, newName, number}) => {\n    return (\n        <div>\n            <form onSubmit = {onSubmit}>\n        <div>\n          name: <input onChange = {onNameChange} value= {newName} />\n          number: <input onChange= {onNumberChange} value = {number}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n        </div>\n    )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = ({filteredName, onDelete}) => {\n    return (\n        <div>\n        {filteredName.map((person) => (\n        <p key={person.id}>\n          {person.name} {person.number}\n          <button onClick = {()=> onDelete(person)}>Delete</button>\n        </p>\n        \n      ))}\n        </div>\n    )\n}\n\nexport default Persons\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = ()=> {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst create = (person) =>{\n    const request = axios.post(baseURL, person)\n    return request.then(response => response.data)\n}\n\nconst remove = (id)=>{\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (person)=>{\n    const request = axios.put(`${baseURL}/${person.id}`,person)\n    return request.then(response=> response.data)\n}\n\nexport default { getAll, create, remove, update}\n\n\n","import React from 'react'\n\nconst Notification = ({message, type}) => {\n    if(message === null){\n        return null\n    }\n    return (\n        <>\n            <div className= {type}>{message}</div>\n        </>\n    )\n}\n\nexport default Notification\n","import React, { useState } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport { useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [number, setNumber] = useState(\"\")\n  const [filter, setFilter] = useState(\"\")\n  const [notification, setNotification] = useState(null)\n  const [msgType, setMsgType] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((data) => setPersons(data));\n  }, []);\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    setFilter(e.target.value);\n  };\n \n\n\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    if(newName === \"\" || number ===\"\"){\n      return window.alert('Either of the field cannot be empty')\n    }\n    const existingPerson = persons.find(\n      (person) =>\n        person.name.toLowerCase() === newName.toLowerCase() ||\n        person.number === number\n    );\n    if (existingPerson) {\n      if(existingPerson.number === number && existingPerson.name.toLowerCase()=== newName.toLowerCase()){\n       return window.alert(\n        `${newName} : ${number} is already added to phonebook`\n      )\n      }\n\n      if(existingPerson.name.toLowerCase()=== newName.toLowerCase()){\n        if(window.confirm(`${newName} is already added to phonebook, replace old number with new one ? ` ))\n        {\n         const updatedPerson = {...existingPerson, number:number}\n         personService.update(updatedPerson).then(r=>{\n           setPersons(persons.map(p => p.id!== updatedPerson.id ? p : r))\n         })\n         .then(()=>{\n           setNewName('')\n           setNumber('')\n           setNotification(\n             `Updated old number for ${newName} with ${number}`\n              )\n           setMsgType('success')\n              setTimeout(() => {\n                setNotification(null)\n              }, 2000);\n         })\n        }\n        return\n      }\n\n      if(existingPerson.number === number){\n        if(window.confirm(`${number} is already added to phonebook, replace old number with new one ? ` ))\n        {\n         const updatedPerson = {...existingPerson, name: newName}\n         personService.update(updatedPerson).then(r=>{\n           setPersons(persons.map(p => p.id!== updatedPerson.id ? p : r))\n         })\n         .then(()=>{\n           setNewName('')\n           setNumber('')\n           setNotification(`Updated contact name for ${number} with ${newName}`\n            )\n             setMsgType('success')\n             setTimeout(() => {\n               setNotification(null)\n             }, 2000)\n         })\n        }\n        return\n      }\n      \n    }\n   else{\n    const personObj = {\n      name: newName,\n      number: number\n    }\n\n    personService.create(personObj).then((person) => {\n      setPersons([...persons,person]);\n      setNewName(\"\")\n      setNumber(\"\")\n      setNotification(`Added contact ${newName}`)\n      setMsgType('success')\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000);\n    })\n  }\n}\n  \n\n  const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(person.id)\n        .then((p) => {\n          setPersons(persons.filter((leftPerson) => leftPerson.id !== person.id));\n        })\n        .catch((error) => {\n          setNotification(` ${person.name} already removed from server`)\n          setMsgType('error')\n          setPersons(persons.filter(p => p.id !== person.id))\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000);\n          \n        });\n    }\n  };\n\n  const filteredName = persons.filter((person) =>\n  person.name.toLowerCase().includes(filter.toLowerCase())\n  )\n\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message = {notification} type = {msgType}/>\n      <Filter onChange={handleSearch} filter={filter} />\n      <h3>Add a New</h3>\n      <PersonForm\n        onSubmit={addPerson}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumChange}\n        newName={newName}\n        number={number}\n      />\n      <h2>Numbers</h2>\n      <Persons filteredName={filteredName} onDelete={handleDelete} />\n      ...\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}